<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Deploy">
  <ItemGroup>
    <PackageReference Include="chocolatey">
      <Version>0.10.14</Version>
    </PackageReference>
    <PackageReference Include="MSBuildTasks">
      <Version>1.5.0.235</Version>
    </PackageReference>
    <PackageReference Include="NuGet.CommandLine">
      <Version>5.2.0</Version>
    </PackageReference>
  </ItemGroup>
  
  <!-- Required to support command " msbuild .\build.proj /t:restore" -->
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  
  <!-- Imported MSBuild tasks -->
  <UsingTask TaskName="ReportGenerator" AssemblyFile="ReportGenerator.Console\bin\Release\ReportGenerator.exe" />
  <UsingTask TaskName="Zip" AssemblyFile="$(UserProfile)\.nuget\packages\msbuildtasks\1.5.0.235\tools\MSBuild.Community.Tasks.dll" /> 
  <UsingTask TaskName="FileUpdate" AssemblyFile="$(UserProfile)\.nuget\packages\msbuildtasks\1.5.0.235\tools\MSBuild.Community.Tasks.dll" /> 

  <!-- Version, adjust before build -->
  <PropertyGroup>
    <Version>4.3.6.1-oauth</Version>
  </PropertyGroup>
  
  <!-- Tools -->
  <PropertyGroup>
    <NuGetCommandLine>$(UserProfile)\.nuget\packages\nuget.commandline\5.2.0\tools\NuGet.exe</NuGetCommandLine>
    <ChocolateyCommandLine>$(UserProfile)\.nuget\packages\chocolatey\0.10.14\tools\chocolateyInstall\choco.exe</ChocolateyCommandLine>
  </PropertyGroup>
  
  <Target Name="Clean">
    <RemoveDir Directories="ReportGenerator.Console\bin" />
    <RemoveDir Directories="ReportGenerator.Console\obj" />
    <RemoveDir Directories="ReportGenerator.Console.NetCore\bin" />
    <RemoveDir Directories="ReportGenerator.Console.NetCore\obj" />
    <RemoveDir Directories="ReportGenerator.Core\bin" />
    <RemoveDir Directories="ReportGenerator.Core\obj" />
    <RemoveDir Directories="ReportGenerator.Core.Test\bin" />
    <RemoveDir Directories="ReportGenerator.Core.Test\obj" />
    <RemoveDir Directories="ReportGenerator.DotnetCliTool\bin" />
    <RemoveDir Directories="ReportGenerator.DotnetCliTool\obj" />
    <RemoveDir Directories="ReportGenerator.DotnetCorePluginLoader\bin" />
    <RemoveDir Directories="ReportGenerator.DotnetCorePluginLoader\obj" />
    <RemoveDir Directories="ReportGenerator.DotnetGlobalTool\bin" />
    <RemoveDir Directories="ReportGenerator.DotnetGlobalTool\obj" />
    <RemoveDir Directories="target\packages" />
    <RemoveDir Directories="target\reports\coverage" />
    <RemoveDir Directories="target\samplereports" />
  </Target>

  <Target Name="Compile">
    <MSBuild Projects="ReportGenerator.sln" Targets="Restore;Build" Properties="Configuration=Release" />
    
    <Exec Command="dotnet publish -c Release ReportGenerator.DotnetCliTool.csproj" WorkingDirectory="ReportGenerator.DotnetCliTool" />

    <Exec Command="dotnet publish -c Release -f netcoreapp2.0 ReportGenerator.Console.NetCore.csproj" WorkingDirectory="ReportGenerator.Console.NetCore" />
    <Exec Command="dotnet publish -c Release -f netcoreapp2.1 ReportGenerator.Console.NetCore.csproj" WorkingDirectory="ReportGenerator.Console.NetCore" />
    <Exec Command="dotnet publish -c Release -f netcoreapp3.0 ReportGenerator.Console.NetCore.csproj" WorkingDirectory="ReportGenerator.Console.NetCore" />

    <Exec Command="dotnet publish -c Release -f netcoreapp2.1 ReportGenerator.DotnetGlobalTool.csproj" WorkingDirectory="ReportGenerator.DotnetGlobalTool" />
    <Exec Command="dotnet publish -c Release -f netcoreapp3.0 ReportGenerator.DotnetGlobalTool.csproj" WorkingDirectory="ReportGenerator.DotnetGlobalTool" />

    <RemoveDir Directories="bin" />
    <RemoveDir Directories="obj" />
  </Target>

  <Target Name="Test" DependsOnTargets="Clean; Compile">
    <MakeDir Directories="target\reports\coverage" />
    <Exec Command="dotnet test --no-build -c Release /p:CollectCoverage=true /p:IncludeTestAssembly=true /p:CoverletOutputFormat=\&quot;opencover,cobertura\&quot; /p:CoverletOutput=../target/reports/coverage/" WorkingDirectory="ReportGenerator.Core.Test" />
  </Target>

  <Target Name="Report" DependsOnTargets="Test">
    <ItemGroup>
      <CoverageFiles Include="target\reports\coverage\coverage.opencover.xml" />
    </ItemGroup>

    <ReportGenerator ReportFiles="@(CoverageFiles)" ReportTypes="Html;Badges" TargetDirectory="target\reports\coverage" AssemblyFilters="-Moq;-xunit*" HistoryDirectory="target\reports\coveragehistory" VerbosityLevel="Warning" />
  </Target>

  <Target Name="Deploy" DependsOnTargets="Clean; Compile; Report">
    <ItemGroup>
      <ZipFileContentBase Include="ReportGenerator.Console\bin\Release\LICENSE.txt;ReportGenerator.Console\bin\Release\Readme.txt" />
      <ZipFileContentNet47 Include="ReportGenerator.Console\bin\Release\appsettings.json;ReportGenerator.Console\bin\Release\*.dll;ReportGenerator.Console\bin\Release\ReportGenerator.exe;ReportGenerator.Console\bin\Release\ReportGenerator.exe.config" />
      <ZipFileContentNetCore20 Include="ReportGenerator.Console.NetCore\bin\Release\netcoreapp2.0\publish\**\*.*"/>
      <ZipFileContentNetCore21 Include="ReportGenerator.Console.NetCore\bin\Release\netcoreapp2.1\publish\**\*.*"/>
      <ZipFileContentNetCore30 Include="ReportGenerator.Console.NetCore\bin\Release\netcoreapp3.0\publish\**\*.*"/>
    </ItemGroup>

    <!-- ZIP -->
    <MakeDir Directories="tmpzip" />
    <MakeDir Directories="tmpzip\net47" />
    <MakeDir Directories="tmpzip\netcoreapp2.0" />
    <Copy SourceFiles="@(ZipFileContentBase)" DestinationFolder="tmpzip" /> 
    <Copy SourceFiles="@(ZipFileContentNet47)" DestinationFolder="tmpzip\net47" /> 
    <Copy SourceFiles="@(ZipFileContentNetCore20)" DestinationFolder="tmpzip\netcoreapp2.0\%(RecursiveDir)" />
    <Copy SourceFiles="@(ZipFileContentNetCore21)" DestinationFolder="tmpzip\netcoreapp2.1\%(RecursiveDir)" />
    <Copy SourceFiles="@(ZipFileContentNetCore30)" DestinationFolder="tmpzip\netcoreapp3.0\%(RecursiveDir)" />
   <ItemGroup>
      <ZipFileContent Include="tmpzip\**\*.*"/>
    </ItemGroup> 
    <Zip Files="@(ZipFileContent)" WorkingDirectory="$(MSBuildThisFileDirectory)tmpzip" ZipFileName="target\packages\ReportGenerator_$(Version).zip" ZipLevel="9" />
    <RemoveDir Directories="tmpzip" />  

    <!-- AzureDevopsTask -->
    <RemoveDir Directories="AzureDevopsTask\ReportGenerator\tools\netcoreapp2.1" />  
    <MakeDir Directories="AzureDevopsTask\ReportGenerator\tools\netcoreapp2.1" />
    <Copy SourceFiles="@(ZipFileContentNetCore21)" DestinationFolder="AzureDevopsTask\ReportGenerator\tools\netcoreapp2.1\%(RecursiveDir)" /> 
    <Exec Command="npm run tsc --" WorkingDirectory="AzureDevopsTask\ReportGenerator" />
    <Exec Command="tfx extension create --manifest-globs vss-extension.json --output-path ..\target\packages" WorkingDirectory="AzureDevopsTask" />

    <!-- Nuget -->
    <Exec Command="$(NuGetCommandLine) pack Deployment\nuget\ReportGenerator.nuspec -OutputDirectory target\packages -Version $(Version)" />
    <Exec Command="$(NuGetCommandLine) pack Deployment\nuget\ReportGenerator.Core.nuspec -OutputDirectory target\packages -Version $(Version)" />
    <Exec Command="$(NuGetCommandLine) pack Deployment\nuget\dotnet-reportgenerator-cli.nuspec -OutputDirectory target\packages -Version $(Version)" />
    <Exec Command="$(NuGetCommandLine) pack Deployment\nuget\dotnet-reportgenerator-globaltool.nuspec -OutputDirectory target\packages -Version $(Version)" />
    
    <!-- Chocolatey -->
    <Exec Command="$(ChocolateyCommandLine) pack Deployment\chocolatey\reportgenerator.portable.nuspec --outputdirectory=target\packages --version=$(Version)" />
  </Target>
      
  <Target Name="Publish" DependsOnTargets="Deploy">
    <!-- Nuget -->
    <Exec Command="$(NuGetCommandLine) push .\target\packages\ReportGenerator.$(Version).nupkg -ApiKey $(NugetApiKey) -Source https://www.nuget.org/api/v2/package" />
    <Exec Command="$(NuGetCommandLine) push .\target\packages\ReportGenerator.Core.$(Version).nupkg -ApiKey $(NugetApiKey) -Source https://www.nuget.org/api/v2/package" />
    <Exec Command="$(NuGetCommandLine) push .\target\packages\dotnet-reportgenerator-cli.$(Version).nupkg -ApiKey $(NugetApiKey) -Source https://www.nuget.org/api/v2/package" />
    <Exec Command="$(NuGetCommandLine) push .\target\packages\dotnet-reportgenerator-globaltool.$(Version).nupkg -ApiKey $(NugetApiKey) -Source https://www.nuget.org/api/v2/package" />
    
    <!-- Chocolatey -->
    <Exec Command="$(ChocolateyCommandLine) push .\target\packages\reportgenerator.portable.$(Version).nupkg --apikey $(ChocolateyApiKey) --source https://push.chocolatey.org/" />
  </Target> 
</Project>